# -*- coding: utf-8 -*-
"""outputs.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Gd7mh3FpLJclq_a8OFeHJrEvKUsoSmhT

# MIMIC 4 data - dataset construction inputevents

Code taken from GRU-ODE-Bayes preprocessing; simplified and adapted for MIMIC 4 1.0
"""

import os
import pandas as pd
import matplotlib.pyplot as plt
from datetime import datetime
from datetime import timedelta
import numpy as np

import torch
import os

pd.set_option('display.max_rows', 50)
pd.set_option('display.max_columns', 300)

data_path = 'nfe/experiments/data/physionet.org/files/mimiciv/2.2'

hos_path = f'{data_path}/hosp'
icu_path = f'{data_path}/icu'
out_path = 'nfe/experiments/data'
proc_path = f'{out_path}/mimic4_processed'
os.makedirs(proc_path, exist_ok=True)

adm = pd.read_csv(f"{proc_path}/admissions_processed.csv")

outputs = pd.read_csv(f'{icu_path}/outputevents.csv.gz')
outputs.tail()

# only choose previously selected admission ids
adm_ids=list(adm["hadm_id"])
outputs=outputs.loc[outputs["hadm_id"].isin(adm_ids)]

print("Number of patients remaining in the database: ")
print(outputs["subject_id"].nunique())

# get item names
item_id=pd.read_csv(f'{icu_path}/d_items.csv.gz')
item_id_1=item_id[["itemid","label"]]
item_id_1.head()

outputs_2=pd.merge(outputs,item_id_1,on="itemid")
outputs_2.head()
print("Number of patients remaining in the database: ")
print(outputs_2["subject_id"].nunique())

# take only the n most used items
n_best=15
pat_for_item=outputs_2.groupby("label")["subject_id"].nunique()
frequent_labels=pat_for_item.sort_values(ascending=False)[:n_best]
outputs_3=outputs_2.loc[outputs_2["label"].isin(list(frequent_labels.index))].copy()

print("Number of patients remaining in the database: ")
print(outputs_3["subject_id"].nunique())
print("Number of datapoints remaining in the database: ")
print(len(outputs_3.index))

print(frequent_labels)

outputs_label_list=['Foley', 'Void', 'OR Urine', 'Chest Tube', 'Oral Gastric', 'Pre-Admission', 'TF Residual', 'OR EBL', 'Emesis', 'Nasogastric', 'Stool', 'Jackson Pratt', 'TF Residual Output', 'Fecal Bag', 'Straight Cath']
outputs_bis=outputs_2.loc[outputs_2["label"].isin(outputs_label_list)].copy()

print("Number of patients remaining in the database: ")
print(outputs_bis["subject_id"].nunique())
print("Number of datapoints remaining in the database: ")
print(len(outputs_bis.index))

outputs_3=outputs_bis.copy()

# Verification that all input labels have the same amounts units
outputs_3.groupby("label")["valueuom"].value_counts()

outputs_3.to_csv(f"{proc_path}/outputs_processed.csv")
print('done')
